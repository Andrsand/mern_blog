{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from '../../../utils/axios';\nconst initialState = {\n  user: null,\n  token: null,\n  isLoading: false,\n  status: null\n};\nexport const registerUser = createAsyncThunk('auth/registerUser', async _ref => {\n  let {\n    username,\n    password\n  } = _ref;\n  try {\n    const {\n      data\n    } = await axios.post('/auth/register', {\n      username,\n      password\n    });\n    if (data.token) {\n      window.localStorage.setItem('token', data.token);\n    }\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n});\nexport const loginUser = createAsyncThunk('auth/loginUser', async _ref2 => {\n  let {\n    username,\n    password\n  } = _ref2;\n  try {\n    const {\n      data\n    } = await axios.post('/auth/login', {\n      username,\n      password\n    });\n    if (data.token) {\n      window.localStorage.setItem('token', data.token);\n    }\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n});\nexport const getMe = createAsyncThunk('auth/loginUser', async () => {\n  try {\n    const {\n      data\n    } = await axios.get('/auth/me');\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n});\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {},\n  extraReducers: {\n    // Register user\n    [registerUser.pending]: state => {\n      state.isLoading = true;\n      state.status = null;\n    },\n    [registerUser.fulfilled]: (state, action) => {\n      state.isLoading = false;\n      state.status = action.payload.message;\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n    },\n    [registerUser.rejected]: (state, action) => {\n      state.status = action.payload.message;\n      state.isLoading = false;\n    },\n    // Login user\n    [loginUser.pending]: state => {\n      state.isLoading = true;\n      state.status = null;\n    },\n    [loginUser.fulfilled]: (state, action) => {\n      state.isLoading = false;\n      state.status = action.payload.message;\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n    },\n    [loginUser.rejected]: (state, action) => {\n      state.status = action.payload.message;\n      state.isLoading = false;\n    },\n    // Проверка авторизации\n    [getMe.pending]: state => {\n      state.isLoading = true;\n      state.status = null;\n    },\n    [getMe.fulfilled]: (state, action) => {\n      var _action$payload, _action$payload2;\n      state.isLoading = false;\n      state.status = null;\n      state.user = (_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.user;\n      state.token = (_action$payload2 = action.payload) === null || _action$payload2 === void 0 ? void 0 : _action$payload2.token;\n    },\n    [getMe.rejected]: (state, action) => {\n      state.status = action.payload.message;\n      state.isLoading = false;\n    }\n  }\n});\nexport const checkIsAuth = state => Boolean(state.auth.token);\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","user","token","isLoading","status","registerUser","username","password","data","post","window","localStorage","setItem","error","console","log","loginUser","getMe","get","authSlice","name","reducers","extraReducers","pending","state","fulfilled","action","payload","message","rejected","checkIsAuth","Boolean","auth","reducer"],"sources":["/home/andrey/Coding/mern_blog/client/src/redux/features/auth/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport axios from '../../../utils/axios'\n\nconst initialState = {\n    user: null,\n    token: null,\n    isLoading: false,\n    status: null,\n}\n\nexport const registerUser = createAsyncThunk(\n    'auth/registerUser',\n    async ({ username, password }) => {\n        try {\n            const { data } = await axios.post('/auth/register', {\n                username,\n                password,\n            })\n\n            if (data.token) {\n                window.localStorage.setItem('token', data.token)\n            }\n\n            return data\n\n        } catch (error) {\n            console.log(error)\n        }\n    },\n)\n\nexport const loginUser = createAsyncThunk(\n    'auth/loginUser',\n    async ({ username, password }) => {\n        try {\n            const { data } = await axios.post('/auth/login', {\n                username,\n                password,\n            })\n\n            if (data.token) {\n                window.localStorage.setItem('token', data.token)\n            }\n\n            return data\n\n        } catch (error) {\n            console.log(error)\n        }\n    },\n)\n\nexport const getMe = createAsyncThunk('auth/loginUser', async () => {\n    try {\n        const { data } = await axios.get('/auth/me')\n\n        return data\n\n    } catch (error) {\n        console.log(error)\n    }\n},\n)\n\nexport const authSlice = createSlice({\n    name: 'auth',\n    initialState,\n    reducers: {},\n    extraReducers: {\n        // Register user\n        [registerUser.pending]: (state) => {\n            state.isLoading = true\n            state.status = null\n        },\n        [registerUser.fulfilled]: (state, action) => {\n            state.isLoading = false\n            state.status = action.payload.message\n            state.user = action.payload.user\n            state.token = action.payload.token\n        },\n        [registerUser.rejected]: (state, action) => {\n            state.status = action.payload.message\n            state.isLoading = false\n        },\n        // Login user\n        [loginUser.pending]: (state) => {\n            state.isLoading = true\n            state.status = null\n        },\n        [loginUser.fulfilled]: (state, action) => {\n            state.isLoading = false\n            state.status = action.payload.message\n            state.user = action.payload.user\n            state.token = action.payload.token\n        },\n        [loginUser.rejected]: (state, action) => {\n            state.status = action.payload.message\n            state.isLoading = false\n        },\n        // Проверка авторизации\n        [getMe.pending]: (state) => {\n            state.isLoading = true\n            state.status = null\n        },\n        [getMe.fulfilled]: (state, action) => {\n            state.isLoading = false\n            state.status = null\n            state.user = action.payload?.user\n            state.token = action.payload?.token\n        },\n        [getMe.rejected]: (state, action) => {\n            state.status = action.payload.message\n            state.isLoading = false\n        },\n    },\n})\n\nexport const checkIsAuth = (state) => Boolean(state.auth.token)\n\nexport default authSlice.reducer"],"mappings":"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"},"metadata":{},"sourceType":"module"}